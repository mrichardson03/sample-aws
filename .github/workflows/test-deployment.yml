name: "test-deployment"
on:
  schedule:
    - cron: "0 0 * * 5"
  workflow_dispatch:

jobs:
  test-deployment:
    name: "Run test Terraform deployment"
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Build infrastructure
        working-directory: infrastructure
        run: |
          aws ec2 create-key-pair --key-name ci-test
          terraform init
          terraform apply -auto-approve -var 'key_name=ci-test' -var 'env_name=ci-test'

      - name: Deploy Kubernetes resources
        working-directory: kubernetes
        run: |
          terraform init
          terraform apply -auto-approve -var 'cluster_name=ci-test-eks-cluster'

      - name: Tear down Kubernetes resources
        if: ${{ always() }}
        working-directory: kubernetes
        run: |
          terraform destroy -auto-approve -var 'cluster_name=ci-test-eks-cluster'

      - name: Tear down infrastructure
        if: ${{ always() }}
        working-directory: infrastructure
        run: |
          terraform destroy -auto-approve -var 'key_name=ci-test' -var 'env_name=ci-test'
          aws ec2 delete-key-pair --key-name ci-test
